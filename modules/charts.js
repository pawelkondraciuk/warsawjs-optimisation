new Chartist.Line('.ct-chart-usage', {
	labels: ['2009-01', '2009-02', '2009-03', '2009-04', '2009-05', '2009-06', '2009-07', '2009-08', '2009-09', '2009-10', '2009-11', '2009-12', '2010-01', '2010-02', '2010-03', '2010-04', '2010-05', '2010-06', '2010-07', '2010-08', '2010-09', '2010-10', '2010-11', '2010-12', '2011-01', '2011-02', '2011-03', '2011-04', '2011-05', '2011-06', '2011-07', '2011-08', '2011-09', '2011-10', '2011-11', '2011-12', '2012-01', '2012-02', '2012-03', '2012-04', '2012-05', '2012-06', '2012-07', '2012-08', '2012-09', '2012-10', '2012-11', '2012-12', '2013-01', '2013-02', '2013-03', '2013-04', '2013-05', '2013-06', '2013-07', '2013-08', '2013-09', '2013-10', '2013-11', '2013-12', '2014-01', '2014-02', '2014-03', '2014-04', '2014-05', '2014-06', '2014-07', '2014-08', '2014-09', '2014-10', '2014-11', '2014-12', '2015-01', '2015-02', '2015-03', '2015-04', '2015-05', '2015-06', '2015-07', '2015-08', '2015-09', '2015-10', '2015-11', '2015-12', '2016-01', '2016-02', '2016-03', '2016-04', '2016-05', '2016-06', '2016-07', '2016-08', '2016-09', '2016-10', '2016-11', '2016-12', '2017-01', '2017-02', '2017-03', '2017-04', '2017-05'],
	series: [{
		name: 'Desktop 43.29%',
		data: [99.33, 99.31, 99.20, 99.14, 99.14, 99.06, 98.95, 98.88, 98.88, 98.85, 98.79, 98.72, 98.44, 98.28, 98.04, 97.82, 97.68, 97.43, 97.14, 96.79, 96.50, 96.19, 95.98, 95.90, 95.70, 95.55, 95.30, 94.79, 94.25, 93.47, 92.98, 92.88, 93.26, 93.45, 93.05, 91.96, 91.51, 91.47, 91.01, 90.42, 89.89, 89.60, 88.91, 85.69, 85.33, 85.02, 84.13, 82.42, 82.41, 81.86, 81.69, 82.43, 81.68, 80.01, 78.66, 78.08, 78.39, 76.68, 76.13, 72.55, 71.95, 70.99, 70.23, 70.61, 68.55, 66.93, 65.83, 64.65, 63.84, 62.77, 61.92, 61.68, 62.38, 62.62, 62.26, 62.71, 61.49, 60.11, 57.00, 55.22, 55.91, 55.86, 57.21, 56.25, 55.86, 55.82, 54.19, 53.54, 51.46, 53.22, 50.10, 50.61, 50.28, 48.74, 47.00, 44.79, 45.27, 45.23, 44.36, 43.15, 43.29]
	}, {
		name: 'Mobile 52.03%',
		data: [0.67, 0.69, 0.80, 0.86, 0.86, 0.94, 1.05, 1.12, 1.12, 1.15, 1.21, 1.28, 1.56, 1.72, 1.96, 2.18, 2.32, 2.57, 2.86, 3.21, 3.50, 3.81, 4.02, 4.10, 4.30, 4.45, 4.70, 5.21, 5.75, 6.53, 7.02, 7.12, 6.74, 6.55, 6.95, 8.04, 8.49, 8.53, 8.99, 9.58, 10.11, 10.40, 11.09, 11.44, 11.66, 11.92, 12.66, 14.04, 13.56, 13.71, 13.79, 13.31, 13.98, 15.33, 16.51, 17.14, 16.98, 18.78, 19.08, 22.18, 22.39, 23.25, 23.93, 23.56, 25.41, 26.66, 27.51, 28.57, 29.36, 30.67, 31.54, 31.82, 31.06, 30.81, 31.58, 31.56, 32.82, 34.21, 37.15, 39.18, 38.78, 39.01, 37.62, 38.62, 38.88, 38.96, 40.60, 41.32, 43.50, 41.61, 44.75, 44.41, 44.91, 46.53, 48.19, 50.31, 49.60, 49.73, 50.75, 52.02, 52.03]
	}, {
		name: 'Tablet 4.68%',
		data: [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 2.86, 3.01, 3.06, 3.22, 3.54, 4.03, 4.43, 4.52, 4.27, 4.33, 4.66, 4.83, 4.78, 4.63, 4.54, 4.78, 5.27, 5.66, 5.76, 5.84, 5.83, 6.04, 6.40, 6.66, 6.78, 6.80, 6.56, 6.54, 6.50, 6.55, 6.57, 6.17, 5.73, 5.69, 5.68, 5.85, 5.60, 5.31, 5.14, 5.17, 5.13, 5.26, 5.22, 5.20, 5.14, 5.04, 5.16, 5.15, 4.98, 4.81, 4.73, 4.81, 4.90, 5.13, 5.04, 4.88, 4.83, 4.68]
	}]
}, {
	plugins: [
		Chartist.plugins.legend({
			position: 'bottom'
		})
	],
	showPoint: false,
	seriesBarDistance: 10,
	chartPadding: {
		right: 60
	},
	axisX: {
		labelInterpolationFnc: function (value, index) {
			return index % 20 === 0 ? value : null;
		}
	}
});

new Chartist.Bar('.ct-chart-load-time', {
	labels: ['LTE (150Mbps)', 'HSDPA (7.2Mbps)', 'UMTS (384Kbps)', 'EDGE (236Kbps)', 'GPRS* (53Kbps)'],
	series: [
		[0, 0.1, 2, 3.5, 15]
	],
}, {
	reverseData: true,
	horizontalBars: true,
	axisX: {
		type: Chartist.FixedScaleAxis,
    ticks: [0, 5, 10, 15, 20],
    low: 0,
    high: 20
	},
	chartPadding: {
		left: 100,
    right: 20
	},
}).on('draw', function (data) {
	if (data.type === 'bar') {
    drawLabels(data);
	}
});


function drawLabels(data) {
  var label, labelText, barLength, labelWidth, barClasses,
    barWidth = 40, barLength = data.element._node.getBBox().width,
    barHorizontalCenter = (data.x1 + (barLength)),
    barVerticalCenter = (data.y1 + (barWidth * .14));

  data.element.attr({
    style: "stroke-width: " + barWidth + "px"
  });

  label = new Chartist.Svg("text");
  label.text(`${data.value.x}s`);
  label.attr({
    x: barHorizontalCenter + 10,
    y: barVerticalCenter,
    "text-anchor": "right",
    style: "font-family: 'proxima-nova-alt', Helvetica, Arial, sans-serif; font-size: 16px; fill: black"
  });

  // add the new custom text label to the bar
  data.group.append(label);

  labelWidth = label._node.getBBox().width; // now get the width of the custom label
  if ((labelWidth + 20) < barLength) {
    label.attr({
      x: barHorizontalCenter - labelWidth - 10,
      style: "font-family: 'proxima-nova-alt', Helvetica, Arial, sans-serif; font-size: 16px; fill: white"
    });
  }
}